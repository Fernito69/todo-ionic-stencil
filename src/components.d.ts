/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AlertLogin {
    }
    interface AppAddProject {
        "user_id": string;
    }
    interface AppAddTask {
        "project_id": string;
    }
    interface AppBackdrop {
    }
    interface AppDashboard {
        "auth": boolean;
        "projects": Array<{
        projectname: string
        project_id: string
    }>;
        "user": {
		name: string
		id: string
		email: string
    };
    }
    interface AppEditProject {
        "editProject": {
        projectname: string
        project_id: string
    };
        "user_id": string;
    }
    interface AppEditTask {
        "editTask": {
        taskname: string
        task_id: string
        taskfinished: boolean
    };
        "project_id": string;
    }
    interface AppHome {
    }
    interface AppLoginForm {
        "auth": boolean;
        "errorMsg": string;
        "loginError": boolean;
        "user": {
		name: string
		id: string
		email: string
	};
    }
    interface AppProfile {
        "name": string;
    }
    interface AppProject {
        "editProject": {
        projectname: string
        project_id: string
    };
        "project": {
        projectname: string
        project_id: string
    };
        "user_id": string;
    }
    interface AppProjectDashboard {
        "activeProject": {
		projectname: string 
		project_id: string
    };
        "tasks": Array<{
		taskname: string
		taskfinished: boolean
		task_id: string
	}>;
        "user": {
		name: string
		id: string
		email: string
    };
    }
    interface AppRoot {
    }
    interface AppTask {
        "editTask": {
        taskname: string
        task_id: string
        taskfinished: boolean
    };
        "project_id": string;
        "task": {
		taskname: string
		taskfinished: boolean
		task_id: string
    };
    }
}
declare global {
    interface HTMLAlertLoginElement extends Components.AlertLogin, HTMLStencilElement {
    }
    var HTMLAlertLoginElement: {
        prototype: HTMLAlertLoginElement;
        new (): HTMLAlertLoginElement;
    };
    interface HTMLAppAddProjectElement extends Components.AppAddProject, HTMLStencilElement {
    }
    var HTMLAppAddProjectElement: {
        prototype: HTMLAppAddProjectElement;
        new (): HTMLAppAddProjectElement;
    };
    interface HTMLAppAddTaskElement extends Components.AppAddTask, HTMLStencilElement {
    }
    var HTMLAppAddTaskElement: {
        prototype: HTMLAppAddTaskElement;
        new (): HTMLAppAddTaskElement;
    };
    interface HTMLAppBackdropElement extends Components.AppBackdrop, HTMLStencilElement {
    }
    var HTMLAppBackdropElement: {
        prototype: HTMLAppBackdropElement;
        new (): HTMLAppBackdropElement;
    };
    interface HTMLAppDashboardElement extends Components.AppDashboard, HTMLStencilElement {
    }
    var HTMLAppDashboardElement: {
        prototype: HTMLAppDashboardElement;
        new (): HTMLAppDashboardElement;
    };
    interface HTMLAppEditProjectElement extends Components.AppEditProject, HTMLStencilElement {
    }
    var HTMLAppEditProjectElement: {
        prototype: HTMLAppEditProjectElement;
        new (): HTMLAppEditProjectElement;
    };
    interface HTMLAppEditTaskElement extends Components.AppEditTask, HTMLStencilElement {
    }
    var HTMLAppEditTaskElement: {
        prototype: HTMLAppEditTaskElement;
        new (): HTMLAppEditTaskElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppLoginFormElement extends Components.AppLoginForm, HTMLStencilElement {
    }
    var HTMLAppLoginFormElement: {
        prototype: HTMLAppLoginFormElement;
        new (): HTMLAppLoginFormElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppProjectElement extends Components.AppProject, HTMLStencilElement {
    }
    var HTMLAppProjectElement: {
        prototype: HTMLAppProjectElement;
        new (): HTMLAppProjectElement;
    };
    interface HTMLAppProjectDashboardElement extends Components.AppProjectDashboard, HTMLStencilElement {
    }
    var HTMLAppProjectDashboardElement: {
        prototype: HTMLAppProjectDashboardElement;
        new (): HTMLAppProjectDashboardElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppTaskElement extends Components.AppTask, HTMLStencilElement {
    }
    var HTMLAppTaskElement: {
        prototype: HTMLAppTaskElement;
        new (): HTMLAppTaskElement;
    };
    interface HTMLElementTagNameMap {
        "alert-login": HTMLAlertLoginElement;
        "app-add-project": HTMLAppAddProjectElement;
        "app-add-task": HTMLAppAddTaskElement;
        "app-backdrop": HTMLAppBackdropElement;
        "app-dashboard": HTMLAppDashboardElement;
        "app-edit-project": HTMLAppEditProjectElement;
        "app-edit-task": HTMLAppEditTaskElement;
        "app-home": HTMLAppHomeElement;
        "app-login-form": HTMLAppLoginFormElement;
        "app-profile": HTMLAppProfileElement;
        "app-project": HTMLAppProjectElement;
        "app-project-dashboard": HTMLAppProjectDashboardElement;
        "app-root": HTMLAppRootElement;
        "app-task": HTMLAppTaskElement;
    }
}
declare namespace LocalJSX {
    interface AlertLogin {
    }
    interface AppAddProject {
        "onOnResetAddProject"?: (event: CustomEvent<any>) => void;
        "onOnSaveNewProject"?: (event: CustomEvent<any>) => void;
        "user_id"?: string;
    }
    interface AppAddTask {
        "onOnResetAddTask"?: (event: CustomEvent<any>) => void;
        "onOnSaveNewTask"?: (event: CustomEvent<any>) => void;
        "project_id"?: string;
    }
    interface AppBackdrop {
    }
    interface AppDashboard {
        "auth"?: boolean;
        "projects"?: Array<{
        projectname: string
        project_id: string
    }>;
        "user"?: {
		name: string
		id: string
		email: string
    };
    }
    interface AppEditProject {
        "editProject"?: {
        projectname: string
        project_id: string
    };
        "onOnResetEditProject"?: (event: CustomEvent<any>) => void;
        "onOnSaveProjectEmptyName"?: (event: CustomEvent<any>) => void;
        "user_id"?: string;
    }
    interface AppEditTask {
        "editTask"?: {
        taskname: string
        task_id: string
        taskfinished: boolean
    };
        "onOnResetEditTask"?: (event: CustomEvent<any>) => void;
        "onOnSaveTaskEmptyName"?: (event: CustomEvent<any>) => void;
        "project_id"?: string;
    }
    interface AppHome {
        "onOnUserSet"?: (event: CustomEvent<any>) => void;
    }
    interface AppLoginForm {
        "auth"?: boolean;
        "errorMsg"?: string;
        "loginError"?: boolean;
        "onOnSubmitForm"?: (event: CustomEvent<any>) => void;
        "user"?: {
		name: string
		id: string
		email: string
	};
    }
    interface AppProfile {
        "name"?: string;
    }
    interface AppProject {
        "editProject"?: {
        projectname: string
        project_id: string
    };
        "onOnDeleteProject"?: (event: CustomEvent<any>) => void;
        "onOnSetActiveProject"?: (event: CustomEvent<any>) => void;
        "project"?: {
        projectname: string
        project_id: string
    };
        "user_id"?: string;
    }
    interface AppProjectDashboard {
        "activeProject"?: {
		projectname: string 
		project_id: string
    };
        "tasks"?: Array<{
		taskname: string
		taskfinished: boolean
		task_id: string
	}>;
        "user"?: {
		name: string
		id: string
		email: string
    };
    }
    interface AppRoot {
    }
    interface AppTask {
        "editTask"?: {
        taskname: string
        task_id: string
        taskfinished: boolean
    };
        "onOnTaskDelete"?: (event: CustomEvent<any>) => void;
        "onOnTaskEdit"?: (event: CustomEvent<any>) => void;
        "project_id"?: string;
        "task"?: {
		taskname: string
		taskfinished: boolean
		task_id: string
    };
    }
    interface IntrinsicElements {
        "alert-login": AlertLogin;
        "app-add-project": AppAddProject;
        "app-add-task": AppAddTask;
        "app-backdrop": AppBackdrop;
        "app-dashboard": AppDashboard;
        "app-edit-project": AppEditProject;
        "app-edit-task": AppEditTask;
        "app-home": AppHome;
        "app-login-form": AppLoginForm;
        "app-profile": AppProfile;
        "app-project": AppProject;
        "app-project-dashboard": AppProjectDashboard;
        "app-root": AppRoot;
        "app-task": AppTask;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "alert-login": LocalJSX.AlertLogin & JSXBase.HTMLAttributes<HTMLAlertLoginElement>;
            "app-add-project": LocalJSX.AppAddProject & JSXBase.HTMLAttributes<HTMLAppAddProjectElement>;
            "app-add-task": LocalJSX.AppAddTask & JSXBase.HTMLAttributes<HTMLAppAddTaskElement>;
            "app-backdrop": LocalJSX.AppBackdrop & JSXBase.HTMLAttributes<HTMLAppBackdropElement>;
            "app-dashboard": LocalJSX.AppDashboard & JSXBase.HTMLAttributes<HTMLAppDashboardElement>;
            "app-edit-project": LocalJSX.AppEditProject & JSXBase.HTMLAttributes<HTMLAppEditProjectElement>;
            "app-edit-task": LocalJSX.AppEditTask & JSXBase.HTMLAttributes<HTMLAppEditTaskElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-login-form": LocalJSX.AppLoginForm & JSXBase.HTMLAttributes<HTMLAppLoginFormElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-project": LocalJSX.AppProject & JSXBase.HTMLAttributes<HTMLAppProjectElement>;
            "app-project-dashboard": LocalJSX.AppProjectDashboard & JSXBase.HTMLAttributes<HTMLAppProjectDashboardElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-task": LocalJSX.AppTask & JSXBase.HTMLAttributes<HTMLAppTaskElement>;
        }
    }
}
